buildscript {
	repositories {
		maven {
      		url "https://plugins.gradle.org/m2/"
    	}
	}
	dependencies {
		// plugin pitest
    	classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.6.0'
    	// plugin coveralls
    	classpath "gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.12.0"
    	// plugin sonarqube
    	classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3"
	}
}

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'eclipse'
    // Plugin for handle Integration-test
    id 'org.unbroken-dome.test-sets' version '4.0.0'
}

group = 'com.examples'
version = '0.0.1-SNAPSHOT'

/*
 * Setup JDK 11
 */

sourceCompatibility = 1.8
targetCompatibility = 1.8

/*
 * Set source encoding: UTF-8
 */

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

/*
 * testSet
 */

testSets {
	integrationTest { dirName = 'it' }
	e2eTest { dirName = 'e2e' }
}

// We require the integrationTests to always be run, even when the inputs and outputs are the same
project.integrationTest {
    outputs.upToDateWhen { false }
}

project.e2eTest {
    outputs.upToDateWhen { false }
}

repositories {
    mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/org.assertj/assertj-core
	testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.19.0'

    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'
    
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-gradle-plugin
	implementation group: 'org.hibernate', name: 'hibernate-gradle-plugin', version: '5.5.2.Final'
	
	// Mockito dependencies
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.10.0'
	
	// https://mvnrepository.com/artifact/com.h2database/h2
	implementation group: 'com.h2database', name: 'h2', version: '1.4.200'
	
	// https://mvnrepository.com/artifact/org.testcontainers/mysql
	testImplementation group: 'org.testcontainers', name: 'mysql', version: '1.15.1'
	
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'
	
	// Log4J dependency
	testImplementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.21'
  	
  	// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'
	
	// https://mvnrepository.com/artifact/org.assertj/assertj-swing-junit
	testImplementation group: 'org.assertj', name: 'assertj-swing-junit', version: '3.17.1'
	
	// https://mvnrepository.com/artifact/info.picocli/picocli
	implementation group: 'info.picocli', name: 'picocli', version: '4.6.1'
	
	// Log4J dependency
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
  	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
}

// Allows you to define the profile to be used
// Run gradle -PbuildProfile=name_profile to apply it
if (!hasProperty('buildProfile')) ext.buildProfile = 'default'  
apply from: "profiles/profile-${buildProfile}.gradle"


// TEST TASK

check.dependsOn integrationTest, e2eTest

integrationTest {
	shouldRunAfter test
}

e2eTest {
	shouldRunAfter integrationTest
}

// FAT JAR

/*
task fatJAR(type: Jar) {

	manifest {
		attributes 'Main-class': 'com.examples.esameattswbellocci.app.swing.LibrarySwingApp'
	}
	
	archiveBaseName = project.name + '-all-dependencies'
	archiveClassifier = "all"
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	configurations.implementation.canBeResolved = true
  	from {
    	configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}
*/